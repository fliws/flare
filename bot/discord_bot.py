import discord
import re
from .telegram_bot import connect_to_telegram, send_image_to_telegram
from .utils import emoji_to_unicode, extract_text_between_stars

client = discord.Client()

@client.event
async def on_ready():
    print('We have logged in as {0.user}'.format(client))
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
    await connect_to_telegram()

@client.event
async def on_message(message):
    if message.author == client.user:
        return
    print(f"full: {message}")
    print(f"content: {message.content}")

    keywords = ['flare', 'flar', 'fler', 'flaer', 'phoenix', '—Ñ–µ–Ω–∏–∫—Å', '—Ñ–ª–µ—Ä', '—Ñ–ª—ç—Ä']
    if any(keyword in message.content.lower() for keyword in keywords):
        # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ flare, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
        if re.search(r'(–ø—Ä–∏–≤|–∑–¥–æ—Ä–æ–≤|–¥–∞—Ä–æ–≤–∞|–∑–¥—Ä–∞–≤|hi |hello|–¥–æ–±—Ä|—Å–∞–ª—é—Ç).*', message.content.lower()):
            await message.reply(f'–ü—Ä–∏–≤–µ—Ç {message.channel.name.split("-")[0]}')
        elif re.search(r'(–∫–∞–∫\s+–¥–µ–ª–∞|–∫–∞–∫\s+–∂–∏–∑–Ω—å|–∫–∞–∫\s+—Ç—ã).*', message.content.lower()):
            await message.reply("–£ –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ, –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º")
        elif re.search(r'(–ø–æ–º–æ–≥–∏|–ø–æ–º–æ—â—å|–∫–∞–∫.*–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è|—Å–ø—Ä–∞–≤–∫–∞|help).*', message.content.lower()):
            await message.reply("–°–µ–π—á–∞—Å —É –º–µ–Ω—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è - –µ—Å–ª–∏ –≤—ã —Ä–µ–∞–≥–∏—Ä—É–µ—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –ø–æ–º–æ—â—å—é —ç–º–æ–¥–∑–∏ :knot:, —è —Ä–µ—Ç—Ä–∞–Ω—Å–ª–∏—Ä—É—é —ç—Ç—É –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ —Ç–µ–ª–µ–≥—Ä–∞–º OpenLongevity/Modjourney")
        else:
            await message.reply("–í—ã –º–µ–Ω—è —É–ø–æ–º—è–Ω—É–ª–∏, –Ω–æ —è –Ω–µ —Å–º–æ–≥ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É. –ù–∞–ø–∏—à–∏—Ç–µ –§–ª—ç—Ä –ø–æ–º–æ–≥–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º")

    pattern = r'\*\*.*\*\* - Image #\d+ <@\d+>'
    if re.match(pattern, message.content):
        await message.add_reaction('üëâ')


@client.event
async def on_raw_reaction_add(payload):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∞–∫—Ü–∏–∏
    emoji = payload.emoji
    channel_id = payload.channel_id
    user_id = payload.user_id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–æ–º
    if user_id == client.user.id:
        print ("own reaction - skip")
        return

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–∞–Ω–∞–ª–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    channel = client.get_channel(channel_id)
    message = await channel.fetch_message(payload.message_id)
    print(f"reaction {emoji.name}")
    if emoji.name == 'üëâ':
        print(message.content)
        if len(message.attachments) > 0:
            for attachment in message.attachments:
                if attachment.content_type.startswith('image'):
                    image_url = attachment.url
                    print(f"send {image_url}")
                    await message.add_reaction('üëå')
                    await send_image_to_telegram(image_url, message.channel.name.split("-")[0] + ": " + f"`{extract_text_between_stars(message.content)}`", reply_to_msg_id=18515)
                    break